logging:
  level:
    org:
      springframework:
        security: DEBUG

server:
  tomcat:
    uri-encoding: UTF-8

spring:
  datasource:
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}


  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
#            redirect-uri: https://getpostman.com/oauth/callback
            client-name: Naver
            scope:
              - name
              - email
              - profile_image
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
#           redirect-uri: https://getpostman.com/oauth/callback
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

cloud:
  aws:
    credentials:
      accessKey: ${CLOUD_AWS_CREDENTIALS_ACCESSKEY}
      secretKey: ${CLOUD_AWS_CREDENTIALS_SECRETKEY}
    region:
      static: ${CLOUD_AWS_REGION_STATIC}
    s3:
      bucket: ${CLOUD_AWS_S3_BUCKET}
      dirname: ${CLOUD_AWS_S3_DIRNAME}

#app
app:
  auth:
    token-secret: ${TOKEN_SECRET}
    access-token-expiration-msec: 3600000
    refresh-token-expiration-msec: 1209600000